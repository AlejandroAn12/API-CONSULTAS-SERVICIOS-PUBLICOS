// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id           String   @id @default(uuid())
  nombres      String
  email        String   @unique
  password     String
  refreshToken String?
  estado       Boolean  @default(true)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  roleId String
  role   Rol    @relation(fields: [roleId], references: [id]) // Usuario pertenece a un Rol

  apiKeys ApiKey[]
  suscripciones Suscripcion[]
}

model Permiso {
  id          String          @id @default(uuid())
  nombre      String?
  descripcion String?
  estado      Boolean         @default(true)
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  rolPermisos RolesPermisos[]
}

model Rol {
  id          String   @id @default(uuid())
  nombre      String
  descripcion String?
  estado      Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  rolPermisos RolesPermisos[]
  usuarios    Usuario[]
}

model RolesPermisos {
  rolId     String
  permisoId String
  rol       Rol     @relation(fields: [rolId], references: [id])
  permiso   Permiso @relation(fields: [permisoId], references: [id])

  @@id([rolId, permisoId])
}

model ApiKey {
  id        Int      @id @default(autoincrement())
  key       String   @unique
  system    String // nombre del sistema que consume tu API
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  expiresAt DateTime   // fecha de expiración

  usuarioId String
  usuario   Usuario @relation(fields: [usuarioId], references: [id])
}

model Plan {
  id          String   @id @default(uuid())
  nombre      String   // Ej: "Básico", "Pro", "Enterprise"
  descripcion String?
  precio      Float    // Valor monetario (ej: 10.99)
  duracionDias Int     // Duración en días (ej: 30, 365)
  estado      Boolean  @default(true) // Activo/Inactivo
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  suscripciones Suscripcion[]
}

model Suscripcion {
  id           String   @id @default(uuid())
  usuarioId    String
  planId       String
  fechaInicio  DateTime @default(now())
  fechaFin     DateTime
  activa       Boolean  @default(true)
  timeZone    String   // ej: "America/Guayaquil", "Europe/Madrid"

  usuario Usuario @relation(fields: [usuarioId], references: [id])
  plan    Plan    @relation(fields: [planId], references: [id])
}
